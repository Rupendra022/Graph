class Solution {
    public static ArrayList<Integer> topoSort(int V, int[][] edges) {
        // code here
        // RADHE RADHE 
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        
        for(int i = 0 ; i<V ; i++){
            adj.add(new ArrayList<>());
        }
        
        int[] indegree = new int[V];
        
        for(int i = 0 ; i<edges.length ; i++){
            int u = edges[i][0];
            int v = edges[i][1];
            adj.get(u).add(v);
            
            indegree[v]++ ; 
            
        }
        
        Queue<Integer> q = new LinkedList<>();
        for(int i = 0 ; i<indegree.length ; i++){
            if(indegree[i]==0){
                q.add(i);
            }
        }
        
        ArrayList<Integer> ans = new ArrayList<>();
        
        while(!q.isEmpty()){
            int node = q.poll();
            ans.add(node);
            for(int nei : adj.get(node)){
                indegree[nei]-- ; 
                if(indegree[nei]==0){
                    q.offer(nei);
                }
            }
        }
        return ans ;
    }
}
