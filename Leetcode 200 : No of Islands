class Solution {
    public void dfs(int sr , int sc , int rows , int cols , char[][] grid , boolean[][] vis){
        if(sr<0 || sc<0 || sr>=rows || sc>=cols || vis[sr][sc]==true || grid[sr][sc]!='1'){
            return ; 
        }
        vis[sr][sc] = true ; 
        int[] dr = {0,1,0,-1};
        int[] dc = {1,0,-1,0};
        for(int i = 0 ; i<4 ; i++){
            dfs(sr+dr[i],sc+dc[i],rows,cols,grid,vis);
        }
    }
    public int numIslands(char[][] grid) {
        
        int count = 0 ; 
        int row = grid.length ;
        int col = grid[0].length ; 
        boolean[][] vis = new boolean[row][col];
        for(int i = 0 ; i<row ; i++){
            for(int j = 0 ; j<col ; j++){
                  if(!vis[i][j] && grid[i][j]=='1'){
                    dfs(i,j,row,col,grid,vis);
                    count++ ; 
                  }
            }
        }

        return count ;
    }
}
